---
# Until centralised database is configured for Grafana, only a single replicate
# can be created as state is managed through a persistent volume
replicas: 1

podDisruptionBudget:
  minAvailable: 0

deploymentStrategy:
  type: RollingUpdate
  maxUnavilable: 1

serviceMonitor:
  enabled: true

ingress:
  enabled: true
  ingressClassName: internal
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cloudflare-production
  hosts:
    - grafana.${cluster_domain}
  tls:
    - hosts:
        - grafana.${cluster_domain}
      secretName: ingress-grafana-tls

admin:
  existingSecret: grafana-admin
  userKey: username
  passwordKey: password

useStatefulSet: true
persistence:
  enabled: true
  storageClassName: proxmox-rbd-ext4

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        uuid: 707eab40-3d36-46ad-bd75-9484fc3be3ff
        url: http://prometheus.prometheus-metrics.svc:9090
        access: proxy
        isDefault: true
        editable: true
      - name: Elasticsearch
        type: elasticsearch
        uuid: 1d2896a9-b3f3-453b-af98-e1f457c0c7b5
        url: http://logs-es-http.elastic-logs.svc:9200
        access: proxy
        isDefault: false
        editable: true
        jsonData:
          timeField: '@timestamp'

imageRenderer:
  deploymentStrategy:
    type: RollingUpdate
    maxUnavailable: 1
  enabled: true
  replicas: 1
  serviceMonitor:
    enabled: true
    path: /metrics
